// Generated by view binder compiler. Do not edit!
package com.example.myprojectloginapplication.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.myprojectloginapplication.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class CardLayoutBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final CardView CardView;

  @NonNull
  public final TextView DoctorDetails;

  @NonNull
  public final ImageView DoctorImage;

  @NonNull
  public final TextView DoctorName;

  @NonNull
  public final ConstraintLayout RelativeLayout;

  private CardLayoutBinding(@NonNull CardView rootView, @NonNull CardView CardView,
      @NonNull TextView DoctorDetails, @NonNull ImageView DoctorImage, @NonNull TextView DoctorName,
      @NonNull ConstraintLayout RelativeLayout) {
    this.rootView = rootView;
    this.CardView = CardView;
    this.DoctorDetails = DoctorDetails;
    this.DoctorImage = DoctorImage;
    this.DoctorName = DoctorName;
    this.RelativeLayout = RelativeLayout;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static CardLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static CardLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.card_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static CardLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      CardView CardView = (CardView) rootView;

      id = R.id.Doctor_Details;
      TextView DoctorDetails = ViewBindings.findChildViewById(rootView, id);
      if (DoctorDetails == null) {
        break missingId;
      }

      id = R.id.Doctor_Image;
      ImageView DoctorImage = ViewBindings.findChildViewById(rootView, id);
      if (DoctorImage == null) {
        break missingId;
      }

      id = R.id.Doctor_Name;
      TextView DoctorName = ViewBindings.findChildViewById(rootView, id);
      if (DoctorName == null) {
        break missingId;
      }

      id = R.id.Relative_Layout;
      ConstraintLayout RelativeLayout = ViewBindings.findChildViewById(rootView, id);
      if (RelativeLayout == null) {
        break missingId;
      }

      return new CardLayoutBinding((CardView) rootView, CardView, DoctorDetails, DoctorImage,
          DoctorName, RelativeLayout);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
