// Generated by view binder compiler. Do not edit!
package com.example.myprojectloginapplication.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.myprojectloginapplication.R;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class PatientPrescriptionLayoutBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextInputEditText DoseET;

  @NonNull
  public final TextInputEditText RemarksET;

  @NonNull
  public final TextInputEditText TabletsET;

  @NonNull
  public final TextInputLayout textInputLayout;

  private PatientPrescriptionLayoutBinding(@NonNull LinearLayout rootView,
      @NonNull TextInputEditText DoseET, @NonNull TextInputEditText RemarksET,
      @NonNull TextInputEditText TabletsET, @NonNull TextInputLayout textInputLayout) {
    this.rootView = rootView;
    this.DoseET = DoseET;
    this.RemarksET = RemarksET;
    this.TabletsET = TabletsET;
    this.textInputLayout = textInputLayout;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static PatientPrescriptionLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static PatientPrescriptionLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.patient_prescription_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static PatientPrescriptionLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.DoseET;
      TextInputEditText DoseET = ViewBindings.findChildViewById(rootView, id);
      if (DoseET == null) {
        break missingId;
      }

      id = R.id.RemarksET;
      TextInputEditText RemarksET = ViewBindings.findChildViewById(rootView, id);
      if (RemarksET == null) {
        break missingId;
      }

      id = R.id.TabletsET;
      TextInputEditText TabletsET = ViewBindings.findChildViewById(rootView, id);
      if (TabletsET == null) {
        break missingId;
      }

      id = R.id.textInputLayout;
      TextInputLayout textInputLayout = ViewBindings.findChildViewById(rootView, id);
      if (textInputLayout == null) {
        break missingId;
      }

      return new PatientPrescriptionLayoutBinding((LinearLayout) rootView, DoseET, RemarksET,
          TabletsET, textInputLayout);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
