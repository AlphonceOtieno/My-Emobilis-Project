// Generated by view binder compiler. Do not edit!
package com.example.myprojectloginapplication.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.myprojectloginapplication.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityAdminSpecialityAditionBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button BookingButton;

  @NonNull
  public final Button PickButton;

  @NonNull
  public final ImageView SpecialityImage;

  @NonNull
  public final EditText SpecialityType;

  private ActivityAdminSpecialityAditionBinding(@NonNull ConstraintLayout rootView,
      @NonNull Button BookingButton, @NonNull Button PickButton, @NonNull ImageView SpecialityImage,
      @NonNull EditText SpecialityType) {
    this.rootView = rootView;
    this.BookingButton = BookingButton;
    this.PickButton = PickButton;
    this.SpecialityImage = SpecialityImage;
    this.SpecialityType = SpecialityType;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityAdminSpecialityAditionBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityAdminSpecialityAditionBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_admin_speciality_adition, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityAdminSpecialityAditionBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.BookingButton;
      Button BookingButton = ViewBindings.findChildViewById(rootView, id);
      if (BookingButton == null) {
        break missingId;
      }

      id = R.id.PickButton;
      Button PickButton = ViewBindings.findChildViewById(rootView, id);
      if (PickButton == null) {
        break missingId;
      }

      id = R.id.SpecialityImage;
      ImageView SpecialityImage = ViewBindings.findChildViewById(rootView, id);
      if (SpecialityImage == null) {
        break missingId;
      }

      id = R.id.SpecialityType;
      EditText SpecialityType = ViewBindings.findChildViewById(rootView, id);
      if (SpecialityType == null) {
        break missingId;
      }

      return new ActivityAdminSpecialityAditionBinding((ConstraintLayout) rootView, BookingButton,
          PickButton, SpecialityImage, SpecialityType);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
