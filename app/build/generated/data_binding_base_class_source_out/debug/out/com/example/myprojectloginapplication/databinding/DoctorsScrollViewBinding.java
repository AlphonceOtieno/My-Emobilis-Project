// Generated by view binder compiler. Do not edit!
package com.example.myprojectloginapplication.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.myprojectloginapplication.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DoctorsScrollViewBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final CardView CardView;

  @NonNull
  public final TextView Doc1;

  @NonNull
  public final ImageView Doc2Image;

  @NonNull
  public final TextView Doc2Name;

  @NonNull
  public final TextView Doc2Speciality;

  @NonNull
  public final ImageView Doc3Image;

  @NonNull
  public final TextView Doc3Name;

  @NonNull
  public final TextView Doc3Speciality;

  @NonNull
  public final ImageView Doc4Image;

  @NonNull
  public final TextView Doc4Name;

  @NonNull
  public final TextView Doc4Speciality;

  @NonNull
  public final ImageView Doc5Image;

  @NonNull
  public final TextView Doc5Name;

  @NonNull
  public final TextView Doc5Speciality;

  @NonNull
  public final ImageView Doc6Image;

  @NonNull
  public final TextView Doc6Name;

  @NonNull
  public final TextView Doc6Speciality;

  @NonNull
  public final ImageView Doc7Image;

  @NonNull
  public final TextView Doc7Name;

  @NonNull
  public final TextView Doc7Speciality;

  @NonNull
  public final ImageView DoctorImage;

  @NonNull
  public final TextView DoctorName;

  @NonNull
  public final ConstraintLayout RelativeLayout;

  @NonNull
  public final ScrollView scrollView2;

  private DoctorsScrollViewBinding(@NonNull ConstraintLayout rootView, @NonNull CardView CardView,
      @NonNull TextView Doc1, @NonNull ImageView Doc2Image, @NonNull TextView Doc2Name,
      @NonNull TextView Doc2Speciality, @NonNull ImageView Doc3Image, @NonNull TextView Doc3Name,
      @NonNull TextView Doc3Speciality, @NonNull ImageView Doc4Image, @NonNull TextView Doc4Name,
      @NonNull TextView Doc4Speciality, @NonNull ImageView Doc5Image, @NonNull TextView Doc5Name,
      @NonNull TextView Doc5Speciality, @NonNull ImageView Doc6Image, @NonNull TextView Doc6Name,
      @NonNull TextView Doc6Speciality, @NonNull ImageView Doc7Image, @NonNull TextView Doc7Name,
      @NonNull TextView Doc7Speciality, @NonNull ImageView DoctorImage,
      @NonNull TextView DoctorName, @NonNull ConstraintLayout RelativeLayout,
      @NonNull ScrollView scrollView2) {
    this.rootView = rootView;
    this.CardView = CardView;
    this.Doc1 = Doc1;
    this.Doc2Image = Doc2Image;
    this.Doc2Name = Doc2Name;
    this.Doc2Speciality = Doc2Speciality;
    this.Doc3Image = Doc3Image;
    this.Doc3Name = Doc3Name;
    this.Doc3Speciality = Doc3Speciality;
    this.Doc4Image = Doc4Image;
    this.Doc4Name = Doc4Name;
    this.Doc4Speciality = Doc4Speciality;
    this.Doc5Image = Doc5Image;
    this.Doc5Name = Doc5Name;
    this.Doc5Speciality = Doc5Speciality;
    this.Doc6Image = Doc6Image;
    this.Doc6Name = Doc6Name;
    this.Doc6Speciality = Doc6Speciality;
    this.Doc7Image = Doc7Image;
    this.Doc7Name = Doc7Name;
    this.Doc7Speciality = Doc7Speciality;
    this.DoctorImage = DoctorImage;
    this.DoctorName = DoctorName;
    this.RelativeLayout = RelativeLayout;
    this.scrollView2 = scrollView2;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DoctorsScrollViewBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DoctorsScrollViewBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.doctors_scroll_view, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DoctorsScrollViewBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.Card_View;
      CardView CardView = ViewBindings.findChildViewById(rootView, id);
      if (CardView == null) {
        break missingId;
      }

      id = R.id.Doc1;
      TextView Doc1 = ViewBindings.findChildViewById(rootView, id);
      if (Doc1 == null) {
        break missingId;
      }

      id = R.id.Doc2_Image;
      ImageView Doc2Image = ViewBindings.findChildViewById(rootView, id);
      if (Doc2Image == null) {
        break missingId;
      }

      id = R.id.Doc2_Name;
      TextView Doc2Name = ViewBindings.findChildViewById(rootView, id);
      if (Doc2Name == null) {
        break missingId;
      }

      id = R.id.Doc2_Speciality;
      TextView Doc2Speciality = ViewBindings.findChildViewById(rootView, id);
      if (Doc2Speciality == null) {
        break missingId;
      }

      id = R.id.Doc3_Image;
      ImageView Doc3Image = ViewBindings.findChildViewById(rootView, id);
      if (Doc3Image == null) {
        break missingId;
      }

      id = R.id.Doc3_Name;
      TextView Doc3Name = ViewBindings.findChildViewById(rootView, id);
      if (Doc3Name == null) {
        break missingId;
      }

      id = R.id.Doc3_Speciality;
      TextView Doc3Speciality = ViewBindings.findChildViewById(rootView, id);
      if (Doc3Speciality == null) {
        break missingId;
      }

      id = R.id.Doc4_Image;
      ImageView Doc4Image = ViewBindings.findChildViewById(rootView, id);
      if (Doc4Image == null) {
        break missingId;
      }

      id = R.id.Doc4_Name;
      TextView Doc4Name = ViewBindings.findChildViewById(rootView, id);
      if (Doc4Name == null) {
        break missingId;
      }

      id = R.id.Doc4_Speciality;
      TextView Doc4Speciality = ViewBindings.findChildViewById(rootView, id);
      if (Doc4Speciality == null) {
        break missingId;
      }

      id = R.id.Doc5_Image;
      ImageView Doc5Image = ViewBindings.findChildViewById(rootView, id);
      if (Doc5Image == null) {
        break missingId;
      }

      id = R.id.Doc5_Name;
      TextView Doc5Name = ViewBindings.findChildViewById(rootView, id);
      if (Doc5Name == null) {
        break missingId;
      }

      id = R.id.Doc5_Speciality;
      TextView Doc5Speciality = ViewBindings.findChildViewById(rootView, id);
      if (Doc5Speciality == null) {
        break missingId;
      }

      id = R.id.Doc6_Image;
      ImageView Doc6Image = ViewBindings.findChildViewById(rootView, id);
      if (Doc6Image == null) {
        break missingId;
      }

      id = R.id.Doc6_Name;
      TextView Doc6Name = ViewBindings.findChildViewById(rootView, id);
      if (Doc6Name == null) {
        break missingId;
      }

      id = R.id.Doc6_Speciality;
      TextView Doc6Speciality = ViewBindings.findChildViewById(rootView, id);
      if (Doc6Speciality == null) {
        break missingId;
      }

      id = R.id.Doc7_Image;
      ImageView Doc7Image = ViewBindings.findChildViewById(rootView, id);
      if (Doc7Image == null) {
        break missingId;
      }

      id = R.id.Doc7_Name;
      TextView Doc7Name = ViewBindings.findChildViewById(rootView, id);
      if (Doc7Name == null) {
        break missingId;
      }

      id = R.id.Doc7_Speciality;
      TextView Doc7Speciality = ViewBindings.findChildViewById(rootView, id);
      if (Doc7Speciality == null) {
        break missingId;
      }

      id = R.id.Doctor_Image;
      ImageView DoctorImage = ViewBindings.findChildViewById(rootView, id);
      if (DoctorImage == null) {
        break missingId;
      }

      id = R.id.Doctor_Name;
      TextView DoctorName = ViewBindings.findChildViewById(rootView, id);
      if (DoctorName == null) {
        break missingId;
      }

      id = R.id.Relative_Layout;
      ConstraintLayout RelativeLayout = ViewBindings.findChildViewById(rootView, id);
      if (RelativeLayout == null) {
        break missingId;
      }

      id = R.id.scrollView2;
      ScrollView scrollView2 = ViewBindings.findChildViewById(rootView, id);
      if (scrollView2 == null) {
        break missingId;
      }

      return new DoctorsScrollViewBinding((ConstraintLayout) rootView, CardView, Doc1, Doc2Image,
          Doc2Name, Doc2Speciality, Doc3Image, Doc3Name, Doc3Speciality, Doc4Image, Doc4Name,
          Doc4Speciality, Doc5Image, Doc5Name, Doc5Speciality, Doc6Image, Doc6Name, Doc6Speciality,
          Doc7Image, Doc7Name, Doc7Speciality, DoctorImage, DoctorName, RelativeLayout,
          scrollView2);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
